{
    "openapi": "3.0.1",
    "info": {
      "version": "2.2.0",
      "title": "Swagger Water API documentation",
      "description": "Showing off swagger-ui-express",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "servers": [
      { "url": "https://water-backend-4k0b.onrender.com" },
      { "url": "http://localhost:3000" }
    ],

    "tags": [
      {
        "name": "Auth",
        "description": "Authorization endpoints"
      },
      {
        "name": "User",
        "description": "User profile endpoints"
      },
      {
        "name": "Water",
        "description": "Water comsumption endpoints"
      }
    ],

    "paths": {
      "/api/auth/signup": {
        "post": {
          "tags": ["Auth"],
          "summary": "User registration",
          "parameters": [],
          "requestBody": {
            "description": "Registration's object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegistrationResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (invalid request body)",
              "content": {}
            },
            "409": {
              "description": "Email already exist",
              "content": {}
            }
          }
        }
      },

      "/api/auth/signin": {
        "post": {
          "tags": ["Auth"],
          "summary": "User sign in",
          "parameters": [],
          "requestBody": {
            "description": "Sign-in object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SignInResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (invalid request body)",
              "content": {}
            },
            "409": {
              "description": "Provided email already exists",
              "content": {}
            }
          }
        }
      },

      "/api/auth/signout": {
        "post": {
          "tags": ["Auth"],
          "security": [{ "Bearer": [] }],
          "summary": "Sign out current user",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Signout success",
              "content": {}
            },
            "400": {
              "description": "Bad request (Authorization header not found)",
              "content": {}
            },
            "401": {
              "description": "invalid token",
              "content": {}
            }
          }
        }
      },
      "/api/users": {
        "patch": {
          "tags": ["User"],
          "security": [{ "Bearer": [] }],
          "summary": "Update user profile",
          "parameters": [],

          "requestBody": {
            "description": "Update user",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserChangeInfoRequest"
                }
              }
            }
          },

          "responses": {
            "200": {
              "description": "Update user returned",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserChangeInfoResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Validation error",
              "content": {}
            },
            "401": {
              "description": "Not authorized, wrong old password",
              "content": {}
            }
          }
        }
      },
      "/api/users/current": {
        "get": {
          "tags": ["User"],
          "security": [{ "Bearer": [] }],
          "summary": "Get current user",
          "parameters": [],

          "responses": {
            "200": {
              "description": "Successful current user data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserCurrentResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (Authorization header not found)",
              "content": {}
            },
            "401": {
              "description": "invalid token",
              "content": {}
            }
          }
        }
      },
      "/api/users/avatars": {
        "patch": {
          "tags": ["User"],
          "security": [{ "Bearer": [] }],
          "summary": "Change user's avatar",
          "parameters": [],
          "requestBody": {
            "description": "Upload file new user's avatar",
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/UserChangeAvatarRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Avatar's URL",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserChangeAvatarResponse"
                  }
                }
              }
            },
            "400": {
              "description": "File not found or File extention not *.jpeg/*.jpg",
              "content": {}
            },
            "401": {
              "description": "Not authorized",
              "content": {}
            }
          }
        }
      },
      "/api/users/waterrate": {
        "patch": {
          "tags": ["User"],
          "security": [{ "Bearer": [] }],
          "summary": "Change user's water rate",
          "parameters": [],
          "requestBody": {
            "description": "New water rate",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRateRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "New water rate value",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WaterRateResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Validation error",
              "content": {}
            },
            "401": {
              "description": "Not authorized",
              "content": {}
            }
          }
        }
      },
      "/api/water": {
        "get": {
          "tags": ["Water"],
          "security": [{ "Bearer": [] }],
          "summary": "Get current user's total water info",
          "parameters": [],

          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserWaterResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (Authorization header not found)",
              "content": {}
            },
            "401": {
              "description": "invalid token",
              "content": {}
            }
          }
        }
      },
      "/api/water/add": {
        "post": {
          "tags": ["Water"],
          "security": [{ "Bearer": [] }],
          "summary": "Creates current user's water document",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "waterAmount": {
                      "type": "integer",
                      "description": "Amount of water consumed in milliliters",
                      "example": 3000
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date in the format YYYY-MM-DD when the water was consumed",
                      "example": "2024-03-22"
                    }
                  },
                  "required": ["waterAmount", "date"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserWaterPostResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (Authorization header not found)",
              "content": {}
            },
            "401": {
              "description": "Invalid token",
              "content": {}
            }
          }
        }
      },
      "/api/water/update/{id}": {
        "put": {
          "tags": ["Water"],
          "security": [{ "Bearer": [] }],
          "summary": "Update user's water record",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Dynamic parameter ID of corresponding water record"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "waterAmount": {
                      "type": "integer",
                      "description": "Amount of water consumed in milliliters",
                      "example": 3000
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date in the format YYYY-MM-DD when the water was consumed",
                      "example": "2024-03-22"
                    }
                  },
                  "required": ["waterAmount", "date"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserWaterUpdateResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Water record not found",
              "content": {}
            },
            "401": {
              "description": "Not authorized",
              "content": {}
            }
          }
        }
      },
      "/api/water/today": {
        "get": {
          "tags": ["Water"],
          "security": [{ "Bearer": [] }],
          "summary": "Get current user's water amount per day",
          "parameters": [
            {
              "name": "date",
              "in": "query",
              "description": "Date in the format YYYY-MM-DD if omitted returns current day",
              "schema": {
                "type": "string",
                "format": "date"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserWaterDayResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (Authorization header not found)",
              "content": {}
            },
            "401": {
              "description": "invalid token",
              "content": {}
            }
          }
        }
      },
      "/api/water/month": {
        "get": {
          "tags": ["Water"],
          "security": [{ "Bearer": [] }],
          "summary": "Get current user's water amount per month or for requested period or for current month if any",
          "parameters": [
            {
              "name": "date",
              "in": "query",
              "description": "Date in the format YYYY-MM if date or period omitted it returns current month",
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "start",
              "in": "query",
              "description": "Start Date of requested period in the format YYYY-MM-DD",
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "end",
              "in": "query",
              "description": "End Date of requested period in the format YYYY-MM-DD",
              "schema": {
                "type": "string",
                "format": "date"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserWaterMonthResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (Authorization header not found)",
              "content": {}
            },
            "401": {
              "description": "invalid token",
              "content": {}
            }
          }
        }
      },
      "/api/water/remove/{id}": {
        "delete": {
          "tags": ["Water"],
          "security": [{ "Bearer": [] }],
          "summary": "Delete user's water records",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Dynamic parameter ID of corresponding water record"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully deleted",
              "content": {}
            },
            "404": {
              "description": "Water record not found",
              "content": {}
            },
            "401": {
              "description": "Not authorized",
              "content": {}
            }
          }
        }
      }
    },


    "components": {
     
      "schemas": {
        "RegistrationRequest": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "email10@example.com"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "qwerty123"
            }
          }
        },
        "RegistrationResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "User's id",
                "example": "66555d71857b1630586974a0"
              },
              "userName": {
                "type": "string",
                "description": "User's name",
                "example": "user"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "email10@example.com"
              },
              "token": {
                "type": "string",
                "description": "User's login token",
                "format": "token",
                "example": "eyJhbGciOiJIUzI1NiIsInRpXVCasdfasDcxODU3YjE2MzA1ODY5NzRhMCIsImlhdCI6MTcxMTkwODAzMCwiZXhwIjoxNzExOTkwODMwfQ.gpjD2TtfIoVgVN9j4rerT73LN1XaOeHR6MAtWyXULQs"
              }
            }
          }
        },
        "SignInRequest": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "email10@example.com"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "qwerty123"
            }
          }
        },
        "SignInResponse": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "User's token",
              "format": "token"
            }
          },
          "example": {
            "token": "eyJhbGciOiJIUzI1NiIsInRpXVCasdfasDcxODU3YjE2MzA1ODY5NzRhMCIsImlhdCI6MTcxMTkwODAzMCwiZXhwIjoxNzExOTkwODMwfQ.gpjD2TtfIoVgVN9j4rerT73LN1XaOeHR6MAtWyXULQs"
          }
        },
        "UserCurrentResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "User's id"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "email10@example.com"
            }
          },
          "example": {
            "_id": "66774eff20447605c9d7b85f",
            "email": "email10@example.com",
            "userName": "email1",
            "avatarURL": "https://res.cloudinary.com/dtqwu2s5z/image/upload/v1712402357/water-tracker/avatars/sample.jpg",
            "gender": "undefined",
            "waterRate": 2222,
            "createdAt": "2024-04-06T13:32:47.207Z",
            "updatedAt": "2024-04-06T14:04:06.459Z"
          }
        },
        "UserChangeInfoRequest": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "email10@example.com"
            },
            "userName": {
              "type": "string",
              "description": "User's name",
              "example": "Angelina Joly"
            },
            "gender": {
              "type": "string",
              "description": "User's gender",
              "example": "female",
              "enum": ["male", "female"]
            }
          }
        },
        "UserChangeInfoResponse": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "email10@example.com"
            },
            "userName": {
              "type": "string",
              "description": "User's name",
              "example": "David"
            },
            "gender": {
              "type": "string",
              "description": "User's gender",
              "example": "male",
              "enum": ["male", "female"]
            }
          }
        },
        "UserChangeAvatarRequest": {
          "type": "object",
          "required": ["avatar"],
          "properties": {
            "avatar": {
              "type": "string",
              "description": "File of avatar",
              "format": "binary"
            }
          }
        },
        "UserChangeAvatarResponse": {
          "type": "object",
          "properties": {
            "avatarURL": {
              "type": "string",
              "description": "Avatar's URL",
              "example": "https://res.cloudinary.com/dtqwu2s5z/image/upload/v1712402357/water-tracker/avatars/sample.jpg"
            }
          }
        },
        "WaterRateRequest": {
          "type": "object",
          "required": ["waterRate"],
          "properties": {
            "waterRate": {
              "type": "integer",
              "description": "User's water rate",
              "example": 1500
            }
          }
        },
        "WaterRateResponse": {
          "type": "object",
          "properties": {
            "waterRate": {
              "type": "integer",
              "description": "User's water rate",
              "example": 1500
            }
          }
        },
        "UserWaterResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier for the water entry"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the water entry"
                  },
                  "waterAmount": {
                    "type": "integer",
                    "description": "Amount of water consumed in milliliters"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "waterRate": {
                        "type": "integer",
                        "description": "User's recommended daily water intake in milliliters"
                      },
                      "gender": {
                        "type": "string",
                        "description": "User's gender"
                      },
                      "_id": {
                        "type": "string",
                        "description": "User's unique identifier"
                      },
                      "email": {
                        "type": "string",
                        "description": "User's email address",
                        "format": "email",
                        "example": "email10@example.com"
                      }
                    },
                    "description": "Details about the user associated with the water entry"
                  }
                },
                "description": "A water entry record"
              },
              "description": "List of water entry records"
            },
            "total": {
              "type": "integer",
              "description": "Total number of water entry records"
            }
          },
          "example": {
            "result": [
              {
                "_id": "660d11627dddbd63e086b51c",
                "date": "2024-04-03T08:01:23.000Z",
                "waterAmount": 300,
                "user": {
                  "waterRate": 2000,
                  "gender": "male",
                  "_id": "660b3984913cb66124b994c2",
                  "email": "email10@example.com"
                }
              },
              {
                "_id": "660d12147dddbd63e086b51f",
                "date": "2024-04-03T08:01:23.000Z",
                "waterAmount": 253,
                "user": {
                  "waterRate": 2000,
                  "gender": "male",
                  "_id": "660b3984913cb66124b994c2",
                  "email": "email10@example.com"
                }
              }
            ],
            "total": 2
          }
        },
        "UserWaterDayResponse": {
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date-time",
              "description": "Start date and time of the requested water records period"
            },
            "endDate": {
              "type": "string",
              "format": "date-time",
              "description": "End date and time of the requested water records period"
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "User's id"
                }
              },
              "description": "Information about the user"
            },
            "waterRecords": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier for the water entry"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the water entry"
                  },
                  "waterAmount": {
                    "type": "integer",
                    "description": "Amount of water consumed in milliliters"
                  }
                },
                "description": "A water entry record"
              },
              "description": "List of water entry records"
            },
            "totalWaterAmount": {
              "type": "integer",
              "description": "Total amount of water consumed for the specified date or current day"
            },
            "percentageWaterAmount": {
              "type": "integer",
              "description": "Percentage of the user's recommended daily water intake represented by the total water amount consumed"
            }
          },
          "description": "Response containing water records for the specified date or current day"
        },
        "UserWaterMonthResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "description": "Date in the format YYYY-MM from request"
              },
              "reqStart": {
                "type": "string",
                "description": "Start date of the requested water records period in the format YYYY-MM-DD"
              },
              "reqEnd": {
                "type": "string",
                "description": "End date of the requested water records period in the format YYYY-MM-DD"
              },
              "realStartDate": {
                "type": "string",
                "format": "date-time",
                "description": "Actual start date and time of the water records period from DB"
              },
              "realEndDate": {
                "type": "string",
                "format": "date-time",
                "description": "Actual end date and time of the water records period from DB"
              },
              "dayOfMonth": {
                "type": "integer",
                "description": "Day of the month for which the water records are provided"
              },
              "waterRate": {
                "type": "integer",
                "description": "User's water rate in milliliters per day"
              },
              "percent": {
                "type": "integer",
                "description": "Percentage of the user's recommended daily water intake represented by the total water amount consumed"
              },
              "numberRecords": {
                "type": "integer",
                "description": "Total number of water records for the specified period or a month"
              }
            },
            "description": "Water records for a specific period or a month"
          },
          "description": "Response containing water records for the specified month"
        },
        "UserWaterPostResponse": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time when the water record was created"
            },
            "waterAmount": {
              "type": "integer",
              "description": "Amount of water consumed in milliliters"
            },
            "user": {
              "type": "string",
              "description": "User's ID"
            },
            "_id": {
              "type": "string",
              "description": "Unique identifier for the water record"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time when the water record was created"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time when the water record was last updated"
            }
          },
          "description": "Response containing the newly created water record"
        },
        "UserWaterUpdateResponse": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Unique identifier for the water record"
            },
            "date": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time when the water record was created"
            },
            "waterAmount": {
              "type": "integer",
              "description": "Amount of water consumed in milliliters"
            },
            "user": {
              "type": "string",
              "description": "User's ID"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time when the water record was created"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time when the water record was last updated"
            }
          },
          "description": "Response updating the existing water record"
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }